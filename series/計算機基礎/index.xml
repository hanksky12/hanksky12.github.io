<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>計算機基礎 on Sky Blog</title>
    <link>https://hanksky12.github.io/series/%E8%A8%88%E7%AE%97%E6%A9%9F%E5%9F%BA%E7%A4%8E/</link>
    <description>Recent content in 計算機基礎 on Sky Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 27 Jul 2025 10:23:51 +0800</lastBuildDate><atom:link href="https://hanksky12.github.io/series/%E8%A8%88%E7%AE%97%E6%A9%9F%E5%9F%BA%E7%A4%8E/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Process &amp; Thread [三] Coroutines</title>
      <link>https://hanksky12.github.io/posts/2025_07_27_process_thread3/</link>
      <pubDate>Sun, 27 Jul 2025 10:23:51 +0800</pubDate>
      
      <guid>https://hanksky12.github.io/posts/2025_07_27_process_thread3/</guid>
      <description>共享資源 優點: 減少記憶體使用量，因為多個協程或線程可以用同一個資源。 提高速度，因為資源已經存在，而不</description>
    </item>
    
    <item>
      <title>Process &amp; Thread [一]</title>
      <link>https://hanksky12.github.io/posts/2024_07_25_process_thread1/</link>
      <pubDate>Thu, 25 Jul 2024 21:27:34 +0800</pubDate>
      
      <guid>https://hanksky12.github.io/posts/2024_07_25_process_thread1/</guid>
      <description>前言 之前在工作上，已經運用多線程，協程，但對於底層運行，還不到通透的地步，重新整理知識 基礎知識 Program 程式</description>
    </item>
    
    <item>
      <title>Process &amp; Thread [二]</title>
      <link>https://hanksky12.github.io/posts/2024_07_25_process_thread2/</link>
      <pubDate>Thu, 25 Jul 2024 21:27:34 +0800</pubDate>
      
      <guid>https://hanksky12.github.io/posts/2024_07_25_process_thread2/</guid>
      <description>Python Global Interpreter Lock 一個GIL鎖，主要是在Cpython的解釋器上，在每個進程生成時，會有一個解釋器負責解釋 ，對</description>
    </item>
    
  </channel>
</rss>
